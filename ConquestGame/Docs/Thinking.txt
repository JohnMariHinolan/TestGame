Game/Board will consist of 2 players
Each player has currency and available units.
Board has 10 unit field and 10 bldg field
Each Field can contain a card. Each Field has a  type(bldg,unit)
Each field has a terrain type, every change should also change the card terrain(may trigger abilities, status)
Each Field has an owner.
Each card has an owner. 
players can only control cards he owns.
players can only set cards on field he owns.
Player has 1 hero
hero has available unit/bldgs

Need something random.
Field has random bonus yield

Free card system
A free card will be added to your hands(free card list) 
Free cards are created on Unit availability list
Free card tier lvl can be upgraded 



Abilities:
On passive:

passive abilities should just give unseen and unremovable statuses to the card.
triggers for every move.

trigger idea: each card have a list of statuses and abilities.
			  each action shall always cause this list to be triggered(trigger type should be passed as argument) 
EventManager?

TYpe


Mediator Pattern Use in chats 

Example:

interface Mediator{

addUser
sendMessage(String Message, User user)

}

Class User{
// initialize on constructor
Mediator meditator

void Send
void Receive

}

pubic class ConcreteMediator impl chatMediator{

List User

@Override
addUser

@Override 
sendMsg
// all user recives


}


Observer pattern:
When you are interested in the state of an object
When it changes state all of the dependents are notified






